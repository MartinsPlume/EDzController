// <auto-generated />
using System;
using EDzController.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace EDzController.Migrations
{
    [DbContext(typeof(AppDbContext))]
    internal class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EDzController.Domain.Models.User.Log", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime?>("LastLoginDateTime")
                    .IsRequired()
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Logs");
            });

            modelBuilder.Entity("EDzController.Domain.Models.User.Role", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(20)")
                    .HasMaxLength(20);

                b.HasKey("Id");

                b.ToTable("Roles");
            });

            modelBuilder.Entity("EDzController.Domain.Models.User.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(255)")
                    .HasMaxLength(255);

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("EDzController.Domain.Models.User.UserLog", b =>
            {
                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.Property<int>("LogId")
                    .HasColumnType("int");

                b.HasKey("UserId", "LogId");

                b.HasIndex("LogId");

                b.ToTable("UserLogs");
            });

            modelBuilder.Entity("EDzController.Domain.Models.User.UserRole", b =>
            {
                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.Property<int>("RoleId")
                    .HasColumnType("int");

                b.HasKey("UserId", "RoleId");

                b.HasIndex("RoleId");

                b.ToTable("UserRoles");
            });

            modelBuilder.Entity("EDzController.Domain.Models.User.UserLog", b =>
            {
                b.HasOne("EDzController.Domain.Models.User.Log", "Log")
                    .WithMany("UsersLog")
                    .HasForeignKey("LogId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("EDzController.Domain.Models.User.User", "User")
                    .WithMany("UserLogs")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("EDzController.Domain.Models.User.UserRole", b =>
            {
                b.HasOne("EDzController.Domain.Models.User.Role", "Role")
                    .WithMany("UsersRole")
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("EDzController.Domain.Models.User.User", "User")
                    .WithMany("UserRoles")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}